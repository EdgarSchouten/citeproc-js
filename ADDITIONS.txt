/**
 * A Javascript implementation of the CSL citation formatting language.
 *
 * <p>A configured instance of the process is built in two stages,
 * using {@link CSL.Core.Build} and {@link CSL.Core.Configure}.
 * The former sets up hash-accessible locale data and imports the CSL format file
 * to be applied to the citations,
 * transforming it into a one-dimensional token list, and
 * registering functions and parameters on each token as appropriate.
 * The latter sets jump-point information
 * on tokens that constitute potential branch
 * points, in a single back-to-front scan of the token list.
 * This
 * yields a token list that can be executed front-to-back by
 * body methods available on the
 * {@link CSL.Engine} class.</p>
 *
 * <p>This top-level {@link CSL} object itself carries
 * constants that are needed during processing.</p>
 * @namespace A CSL citation formatter.
 */
For abbreviation infrastructure, would need to be able to report out
three categories of variable, each in two parts (known abbreviation
vars and unknown abbreviation vars).

Would also need to be able to snarf a nickname for an abbreviation
set, and would need a function in sys for retrieving items
from the set, with a well defined interface.

terms:
  un-sales-number-label
  collection-number-label
  document-number-label
  document-number-authority-suffix

variables:
  un-sales-number

Need to build an abbreviations substitution mechanism to test this.
ECLAC examples need localized content for abbreviations as well.

<names variable="author" delimiter=", ">
  <name delimiter=", " 
        form="short"
        et-al-min="3"
        et-al-use-first="2">
  </name>
  <institution first-max="1" 
               append-last="1"
               order="normal"
               institution-parts="short-long">
    <institution-part name="long"
                      has-short-is="true" 
                      prefix=" ("
                      suffix=")"/>
  </institution>
  <substitute>
    <text variable="publisher"/>
  </substitute>
</names>

Brown.
Brown & Smith.
Brown, Smith et al.

(BC) Big Co.
Tiny Subcommittee, (BC) Big Co.
Brown, (BC) Big Co.
Brown & Smith, (BC) Big Co.
Brown, Smith et al., (BC) Big Co.
