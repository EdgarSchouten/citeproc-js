/**
 * A Javascript implementation of the CSL citation formatting language.
 *
 * <p>A configured instance of the process is built in two stages,
 * using {@link CSL.Core.Build} and {@link CSL.Core.Configure}.
 * The former sets up hash-accessible locale data and imports the CSL format file
 * to be applied to the citations,
 * transforming it into a one-dimensional token list, and
 * registering functions and parameters on each token as appropriate.
 * The latter sets jump-point information
 * on tokens that constitute potential branch
 * points, in a single back-to-front scan of the token list.
 * This
 * yields a token list that can be executed front-to-back by
 * body methods available on the
 * {@link CSL.Engine} class.</p>
 *
 * <p>This top-level {@link CSL} object itself carries
 * constants that are needed during processing.</p>
 * @namespace A CSL citation formatter.
 */
>>===== MODE =====>>
citation
<<===== MODE =====<<



>>===== RESULT =====>>
No date here
Have date, will travel
<<===== RESULT =====<<

>>===== CITATIONS =====>>
[
    [
        {
            "id": "ITEM-1"
        }
    ], 
    [
        {
            "id": "ITEM-2"
        }
    ]
]
<<===== CITATIONS =====<<


>>===== CSL =====>>
<style 
      xmlns="http://purl.org/net/xbiblio/csl"
      class="in-text"
      version="1.0">
  <info>
    <id />
    <title />
    <updated>2009-08-10T04:49:00+09:00</updated>
  </info>
  <citation>
    <layout>
      <choose>
        <if variable="issued">
          <text value="Have date, will travel" />
        </if>
        <else>
          <text value="No date here" />
        </else>
      </choose>
    </layout>
  </citation>
</style>
<<===== CSL =====<<


>>===== INPUT =====>>
[
    {
        "author": [
            {
                "family": "Doe", 
                "given": "John", 
                "static-ordering": false
            }
        ], 
        "id": "ITEM-1", 
        "title": "Work 1", 
        "type": "book"
    }, 
    {
        "author": [
            {
                "family": "Doe", 
                "given": "John", 
                "static-ordering": false
            }
        ], 
        "id": "ITEM-2", 
        "issued": {
            "date-parts": [
                [
                    2000
                ]
            ]
        }, 
        "title": "Work 2", 
        "type": "book"
    }
]
<<===== INPUT =====<<
