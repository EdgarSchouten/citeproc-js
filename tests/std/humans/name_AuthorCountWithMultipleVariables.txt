/**
 * A Javascript implementation of the CSL citation formatting language.
 *
 * <p>A configured instance of the process is built in two stages,
 * using {@link CSL.Core.Build} and {@link CSL.Core.Configure}.
 * The former sets up hash-accessible locale data and imports the CSL format file
 * to be applied to the citations,
 * transforming it into a one-dimensional token list, and
 * registering functions and parameters on each token as appropriate.
 * The latter sets jump-point information
 * on tokens that constitute potential branch
 * points, in a single back-to-front scan of the token list.
 * This
 * yields a token list that can be executed front-to-back by
 * body methods available on the
 * {@link CSL.Engine} class.</p>
 *
 * <p>This top-level {@link CSL} object itself carries
 * constants that are needed during processing.</p>
 * @namespace A CSL citation formatter.
 */
>>===== MODE =====>>
citation
<<===== MODE =====<<



>>===== RESULT =====>>
5
<<===== RESULT =====<<


>>===== CSL =====>>
<style 
      xmlns="http://purl.org/net/xbiblio/csl"
      class="in-text"
      version="1.0">
  <info>
    <id />
    <title />
    <updated>2009-08-10T04:49:00+09:00</updated>
  </info>
  <citation 
         et-al-min="4"
         et-al-use-first="3">
    <layout>
      <names variable="author editor">
        <name form="count" />
      </names>
    </layout>
  </citation>
</style>
<<===== CSL =====<<


>>===== INPUT =====>>
[
    {
        "author": [
            {
                "family": "Doe", 
                "given": "John", 
                "static-ordering": false
            }, 
            {
                "family": "Roe", 
                "given": "Jane", 
                "static-ordering": false
            }, 
            {
                "family": "Brown", 
                "given": "Robert", 
                "static-ordering": false
            }, 
            {
                "family": "Smith", 
                "given": "Tom", 
                "static-ordering": false
            }
        ], 
        "editor": [
            {
                "family": "Noakes", 
                "given": "John", 
                "static-ordering": false
            }, 
            {
                "family": "Stoakes", 
                "given": "Richard", 
                "static-ordering": false
            }
        ], 
        "id": "item-1", 
        "type": "book"
    }
]
<<===== INPUT =====<<
