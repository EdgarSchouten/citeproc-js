Summary of changes to citeproc-js since version 1.0.0 release.

=========================
Changes in version 1.0.58
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- In multilingual names handling,
  eliminate fallback to default locale
  language. (Running with this configuration
  in an application proved to be confusing.)


=========================
Changes in version 1.0.57
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Correctly handle singleton conditional
  nodes.  Affects cites to theses in the
  Chicago styles.


=========================
Changes in version 1.0.56
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Provide for separate configuration of name
  and title transliterations.


=========================
Changes in version 1.0.55
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Fix bug that triggered "registry[id] undefined"
  error in some disambiguation operations.

- Fix bug affecting voluntary suppression
  of small caps in rich text parsing engine.

-----------
Enhancement
-----------

- Add methods for setting multilingual 
  transliteration, translation, and sort 
  parameters on configured processor.


=========================
Changes in version 1.0.54
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Fixes misplacement of labels set before the
  nameset to which they apply.

=========================
Changes in version 1.0.53
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Fix a subtle bug that caused full author names to
  be erroneously rendered in citations although the
  style parameters did not permit them.


=========================
Changes in version 1.0.52
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Reverse the RTF-related conservatism in the quashing
  of duplicate spaces that was introduced in 1.0.51.

- Add missing parens to suspect test condition (not
  related to any known bug).

----------
API change
----------

- The processor quashes double spaces in the output.
  RTF control words can be terminated with a space, but
  this causes an immediately following space to be lost
  from the output. To avoid this, the RTF output mode of 
  the processor has been adjusted to terminate RTF control
  words with {} rather than space. Applications that convert
  processor output between other formats (such as HTML)
  may need to be adjusted to accomodate this new behavior.


=========================
Changes in version 1.0.51
=========================

----------
API change
----------

- Return error objects with details of cites or bibliography
  entries that produce no rendered output.  See processor
  manual for details.

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Fix string breakage affecting text-case="title".

- Fix over-aggressive quashing of spaces, which affected
  spacing following RTF entities.

-------
Cleanup
-------

- Update manual with description of supplementary field
  facility.


=========================
Changes in version 1.0.50
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Apply output-mode-specific text_escape function to
  affixes and delimiters.

- Strip XML declaration from CSL and locale strings
  received for parsing in the xmldom.js module.

- Add paranoia fallback to handle comment nodes that
  sneak past the XML parser.

Thanks to Carles Pina for bug reports on the issues
above.

-------
Cleanup
-------

- Update manual to indicate support for non-E4X platforms.


=========================
Changes in version 1.0.49
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Fix XML parsing code in xmldom.js to screen XML comments
  from the processor.  Thanks to Carles Pina for reporting
  this fault.

- Tighten up conditions for suppression of the trailing year
  where the volume number and the year have the same value.
  Suppression will no longer occur when the rendered date
  contains additional details (day, month).

- Throw a more meaningful error when an invalid locale
  is requested.  Thanks to Carles Pina.

- Fix missing definition of quotes="false" in formats.js.
  Thanks to Carles Pina.

- Fix bug in handling of capitalized characters used in
  citeproc-js hackaround for multi-character initials.

-----------
Enhancement
-----------

- Extend support for "parallel" legal citations to include
  case and comment string citations used in French legal
  writing.

-------
Cleanup
-------

- Adjust demo page to include a comment (to check that
  comment nodes are no longer reaching the processor).
  

=========================
Changes in version 1.0.48
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Further fixes to quashing of duplicate punctuation
  and spaces.

- Fix issues with bibliography slug.

- Properly report orphan shortTitle and journalAbbriviation 
  to group as producing output, when short form is called 
  and main variable is nil.

- Fix bug in short form title support.

- Permit author to vary between parallel citations. Useful
  for French case-and-commentary string cites.

-----------
Enhancement
-----------

- Provide for parsing experimental variables out of the
  content of the note variable.  For use in advance
  testing of styles that require changes to the variables
  available in CSL, or supplied by the calling application.


=========================
Changes in version 1.0.47
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Fix a duplicate space issue reported by Carles Pina.

- General refactoring of code for identifying an quashing
  duplicate punctuation and spaces.  The code should be
  easier to control when further issues involving punctuation
  arise down the road.

-----------
Enhancement
-----------

- Provide for replacement of the citation number in
  numbered styles with a slug, so that strings in a
  bibliography listing can be used in a template
  without rerendering.

-------
Cleanup
-------

- Fix up stale links in processor manual.

- Fix syntax error in test.py affecting Python 2.5 systems.

- Add explanatory notes to demo.html page, in an effort
  to clarify the way processor output can be styled
  and formatted.


=========================
Changes in version 1.0.46
=========================

-----------
Enhancement
-----------

- Add option to updateItems() and updateUncitedItems()
  to suppress sorting of the bibliography.


=========================
Changes in version 1.0.45
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Fix duplicate terminal punctuation
  affecting bibliography output.

- Eliminate dereferencing assignments, for
  compatibility with some JS implementations.

- Suppress duplicate spaces affecting some
  styles.

-------
Cleanup
-------

- Fix typo in demo page.

=========================
Changes in version 1.0.44
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Do not treat empty dates as rendering content for purposes of
  implicit group conditional rendering, but do recognize literal 
  date content in the same context."


=========================
Changes in version 1.0.43
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- In test.py, change the -E bundled code dump option to -Z,
  and describe as a Zotero bundle option in script help messages.

- Include an assignment of CSL.error to Zotero.debug in the Zotero
  bundle, so that error messages and warnings from the processor will
  pass through correctly, without crashing the processor.

- Render literal passthrough strings on date objects only when
  the year is included among the requested date elements.

- Add temporary code to normalize the structure of some date 
  input objects.

  (... and so we bid a sad farewell to the Meaning of Life 
  release.)
 

=========================
Changes in version 1.0.42
=========================

-----------
Enhancement
-----------

- Provisional implementation of ellipsis truncation of 
  creator listings as required by APA 6th, in anticipation 
  of upcoming point release of CSL schema and specification.


=========================
Changes in version 1.0.41
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Reset processor's internal last_name_rendered variable,
  to prevent previous runs of the processor from affecting
  bibliography output.


=========================
Changes in version 1.0.40
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Avoid update to position data of other citations during
  previewing.  On-the-fly updates of related citations upon
  citation edit or insert were broken, but should now work 
  correctly.


=========================
Changes in version 1.0.39
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Fix a tiny bug that could cause erroneous position values when
  previewing under some circumstances, resulting in an incorrect
  cite form in preview, and a different (but correct) cite form
  in the document.


=========================
Changes in version 1.0.38
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Fix appendCitationCluster() to work with the API revision
  made to processCitationCluster() in point release 1.0.28.

-----------
Enhancement
-----------

- When user provides a cite suffix that ends with a full stop,
  suppress the normal inter-cite join.


=========================
Changes in version 1.0.37
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Quash duplicate terminal punctuation at the end of citations.
  This can happen where an abbreviated term such as id. or
  ibid. is rendered at the end of a citation in a note style,
  in which the note is terminated with a period.

- Eliminate implicit for loops in array constructs, which is
  sadly not available in Chromium JS engine.


=========================
Changes in version 1.0.36
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Refresh citations in which names or year suffixes have
  (potentially) changed.


=========================
Changes in version 1.0.35
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Simplify save/restore operations for previewing.

- Tie in tainting code for disambig values registered via disambig_cites.js.  
  Possibly over-aggressive about rerendering now, but it works.


=========================
Changes in version 1.0.34
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Include year suffix in clone of disambiguation
  configuration.  Failure to include this parameter
  appears to have been behind some intermittent
  glitches in preview handling of year suffixed
  citations.

- Avoid processor crash when unregistered citation
  objects are encountered in preview mode.  The crash
  points occur during tainting, which is irrelevant
  in preview mode, so no harm is done; but I'm not
  really sure why this would ever happen.  Possibly
  a concurrency issue?

-------
Cleanup
-------

- Eliminate unused keyname on cloned disambig objects.

- Minor formatting cleanup in util_disambig.js.

- Add a couple of paranoia operations to processCitationCluster().

  * Issue a bogus warning citation in the event of a processor
    crash.  This should come out for production.

  * Slice citationsPre and citationsPost when they enter
    the processor.  I've been exploring some instability
    with large numbers of same-author/same-year cites in
    Zotero, and thought that mallability of list input
    might be part of the problem.  No idea whether these
    lists can or do change length or content during processing,
    but just in case.


=========================
Changes in version 1.0.33
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- In preview mode, avoid tampering with the registry data,
  of items in the citation to be previewed that already
  exist in the registry.  Fixes errors in subsequent
  rendering of year suffixes.

- Suppress redundant return value for current cite, when it is
  tainted by an update by processCitationCluster().

-------
Cleanup
-------

- Add a further unit test for previewCitationCluster(), to
  uncover year suffix bug.


=========================
Changes in version 1.0.32
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Fix bugs in the handling of document-wide names disambiguation
  that manifested when one or more items with identical names were
  deleted from the registry.

-------
Cleanup
-------

- More thorough tests for previewCitationCluster().

- Add some debugging trace chatter for cmd_cite.js.

- Pointless increment to processor manual version number.


=========================
Changes in version 1.0.31
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Fix some state restore bugs in previewCitationCluster().

-------
Cleanup
-------

- Roll back previewCitationClusterStatic() command that
  was introduced in the last release.  Discussion and more
  careful thought showed that it is not safe and not
  generally a good idea to make blind assumptions about
  document state.

- Extend the test fixtures for previewCitationCluster()
  a bit.


=========================
Changes in version 1.0.30
=========================

-----------
Enhancement
-----------

- Add new previewCitationClusterStatic() command, to
  simplify the task of generating previews in the calling
  application.  The command requires only a citation
  object, and an output mode flag (typically "html").

-------
Cleanup
-------

- Document previewCitationClusterStatic() command in the
  processor manual.


=========================
Changes in version 1.0.29
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Complete reimplementation of cite-level disambiguation.
  The new code is more compact and maintainable, and
  avoids thrashing behavior that afflicted the previous
  code when a large number of cites required both
  add-names and year-suffix disambiguation.

- Suppress year suffix when fresh ambig keys are generated.

-------
Cleanup
-------

- Move disambiguation options from citeproc.citation.opt
  to citeproc.opt.

- Use named year_suffix element on disambiguation configuration
  objects, rather than the anachronistic index value 2.

- Set default value of false rather than number 0 on year_suffix
  element.

- Generate year suffix for any non-false value on year_suffix
  element.


======================================
Changes in version 1.0.28 [API change]
======================================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- This version introduces a significant change to the return
  value of processCitationCluster().  It is now an array with
  two elements, the first being a JS object that serves as a
  data segment, and the second the list of two-element arrays
  representing insertion indexes and strings for insertion
  (as previously documented).  An API change of this scale
  probably calls for some more visible sign in the version
  numbering, but the original statement on versioning says
  that the major and minor numbers will align with the CSL
  schema, so we stay at level 1.0.

- The data segment referred to above contains just one element
  currently, "bibchange", which is true if processing the
  citation results in any change affecting the bibliography.

- This release also introduces one change and one addition to
  style configuration flags.  The flag at citation.opt["citation-number-sort"]
  has been moved to opt.citation_number_sort, for clarity and
  consistency.  A new flag, open.sort_citations, is true if
  citations are sorted by the style in any way.

-------
Cleanup
-------

- Document API change in the processor manual.

- Document availability of opt.citation_number_sort and 
  opt.sort_citations in the processor manual.



=========================
Changes in version 1.0.27
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Fix obvious memory leak and corruption bug affecting sortedItems 
  elements, of citationItem content objects.
  

=========================
Changes in version 1.0.26
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Implement new command restoreProcessorState(), for use in
  ... restoring the processor state, when position variables
  and citation sort keys are already known.

-------
Cleanup
-------

- Add entry for new restoreProcessorState() command to processor
  manual.

- A few tests of the restoreProcessorState() command.


=========================
Changes in version 1.0.25
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Provide new command, previewCitationCluster(), that returns
  string for hypothetical citation at specified position,
  without affecting processor state.

- Fix bug that would have cause appendCitationCluster() to
  run updateItems() unnecessarily.

- Provide for forced generation of citationID, for use
  in previewing.

-------
Cleanup
-------

- Provide more meaningful internal flags for processCitationCluster().

- Add entry for new previewCitationCluster() command to processor
  manual.

- A few tests of the new previewCitationCluster() command.


=========================
Changes in version 1.0.24
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Cope with item IDs of numeric type, and roll back
  one patch from 1.0.23 that becomes unnecessary as
  a result.


=========================
Changes in version 1.0.23
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Cope with two disambiguation cases, involving add-names and
  add-givenname, that succeeded in crashing the processor.


=========================
Changes in version 1.0.22
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Bypass sorting of citations that have a value for "unsorted" 
  in citation.properties.

-------
Cleanup
-------

- Document "unsorted" toggle in processor manual.


=========================
Changes in version 1.0.21
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Tighten up "NUMERIC" update_mode to mean styles that render
  citation-number in citations (renderings in the bibliography
  are now ignored for purposes of setting this internal flag).

- The numeric styles fix introduced at version 1.0.17 broke with
  styles that sort the bibliography on anything other than
  citation-number (i.e. document first-reference order).  With
  this release, arbitrary sorts of the bibliography work with
  numeric styles.

- Position evaluation code is now invoked only in styles that make
  use of position testing (to save a few cycles).

- Numeric styles now perform targetted citation updates correctly.


=========================
Changes in version 1.0.20
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Retain all names added by disambiguate-add-givennames when year-suffix
  is added to a cite.  While not strictly necessary for disambiguation,
  the additional information is useful when scanning a bibliography for
  the target entry.  In the previous implementation, Bennett was guilty
  of thinking too much like a computer with a hash table, and too little
  like a reader with a reference list in front of them.

- Eliminate conditions that erroneously suppressed wrapper tags on
  institutional names.



=========================
Changes in version 1.0.19
=========================

-------
Cleanup
-------

- Set up AGPLv3 as an alternative license to CPAL.

=========================
Changes in version 1.0.18
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- RTF and plain text output specs, provided by Simon Kornblith of
  the Zotero project, Center for History and New Media, George
  Mason University.

- Fix weakness in by-cite disambiguation where (I think) maxing out
  disambiguation parameters results in successful disambiguation of
  all but one of the cites in a pool.  Relevant discussion on
  `xbiblio list @ SourceForge`__.

__ http://sourceforge.net/mailarchive/forum.php?thread_name=AANLkTimtM7wsRL9dhcb4xUICFdj2VIom_Y2t_1wvG1RQ%40mail.gmail.com&forum_name=xbiblio-devel



-------
Cleanup
-------

- Added -E option to ./test.py, to dump processor code with embedded E4X
  support, as used in Zotero.

- Renamed -b option in ./test.py to -B, for consistency with new -E option.

- Simplify regexp used to identify numbers in numeric variables.  Now
  more conservative, but this is probably right.  No effect on tests.

=========================
Changes in version 1.0.17
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- For styles that sort cites on citation-number, postpone the
  cite sort operation, to allow the registry entry and accompanying
  sequence number to appear in the registry before the sort is
  attempted.

=========================
Changes in version 1.0.16
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Fix error raised by bad var in warning message.

-------------------------------------
Adjustments to extended functionality
-------------------------------------

- Treat names that have a family element without a given element
  as institutional names, with related adjustments to test fixtures.

-------
Cleanup
-------

- Drop test fixture description from processor manual.  This is
  now to be maintained in the manual of the CSL Test Suite.

=========================
Changes in version 1.0.15
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Eliminate implicit rendering of "no date" term by cs:date.


=========================
Changes in version 1.0.14
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Remove conditional statement that caused leakage of long-form names into subsequent 
  cites in the MHRA style.

- Fix error in test fixture example contained in the processor manual.

-------
Cleanup
-------

- Add ambig key to one block of debugging info in disambig_cites.js

- Set path to styles to point into manually updated external standard tests bundle.

- Remove styles used by standard tests from this archive.


=========================
Changes in version 1.0.13
=========================

-------
Cleanup
-------

- Drop standard test fixture data from citeproc-js source repository.

- Adjust test runner test.py to accomodate the directory structure of
  the standalone copy of the test fixtures.

- Add note on the need to add the test fixtures manually to the README.txt 
  file and the processor manual.


=========================
Changes in version 1.0.12
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Fix bug in optional date parser code affecting ranged
  Japanese dates.

-------
Cleanup
-------

- Separate local and standard test fixtures, and make necessary
  adjustments to test framework.

- Drop test subdirectories "bundled" and "run" from mercurial.


=========================
Changes in version 1.0.11
=========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Processor now opens a key entry in the abbreviation lists for any 
  field value for which abbreviation is requested, but unavailable.
  This should provide enough to get a circle-of-goodness thing
  going to start crowdsourcing style-specific abbreviation lists.


=========================
Changes in version 1.0.10
=========================

-------
Cleanup
-------

- Checking in bundled code for the last change, upping version
  in processor code.


========================
Changes in version 1.0.9
========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Cause processor to report its own version as processor_version,
  and the supported CSL version as csl_version.


========================
Changes in version 1.0.8
========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Fix code incompatible with IE6 in util_dateparser.js.

- Fix error in the code for generating year-suffix strings
  (fixes bug affecting very high values unlikely to be encountered
  in actual operation).

-------
Cleanup
-------

- Various small fixes in the tests/citeproc_js processor
  tests directory to get tests working with current version
  of code.

- Make syntax and formatting adjustments to recent code as
  recommended by jslint.

- Fix invalid CSL in one test.

- Drop some extraneous files from the archive.


========================
Changes in version 1.0.7
========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Place name suffix after the given name is name-as-sort-order
  rendering, separated by a comma, as required by CMS.

- Provide for quote-escaping of name field parsing, when the
  citeproc-js specific parse-names toggle is used to invoke
  name field pre-parsing.

-------
Cleanup
-------

- Tests of citeproc-js name parsing extension, with CMS-correct
  handling of name suffixes.

- Fix placement of name suffix in several tests.

- Move parseName() function from build.js to util_names.js.  

- Test for quote-escaped particles in the family name with name field
  parsing.

- Update to manual to cover the citeproc-js parsing conventions for
  name particles and suffixes.


========================
Changes in version 1.0.6
========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Drop suffix from short form of names.

- Use implicit context-sensitive joins (space or comma + space)
  when the cs:et-al element is used in a name (i.e. align behavior
  of this element with behavior of the implicit "et al." term, as
  required by the amended CSL specification).

- Permit use of "initials" with non-byzantine names, when style requires
  initialization of a name.  Will allow truncation of Japanese given
  names to the first character, as required by some book publisher
  styles in Japan, and possibly in other Asian-script domains.

-------
Cleanup
-------

- Move a test specific to citeproc-js to citeprocjs group.

- Adjust tests to require implicit application of comma + space prefix
  to et al. term, when cs:et-al is used.

- Simplify handling of "et-al" and "with" joins, eliminating a couple
  of nesting levels.  Preliminary infrastructure for discriminate
  handling of "et-al" and "and" terms with institutional names.


========================
Changes in version 1.0.5
========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Give name suffixes the same formatting as the family
  name-part.


========================
Changes in version 1.0.4
========================

-----------
Enhancement
-----------

- Fix articulars preceded by a comma (as Bennett's own name)
  to render correctly in bibliographies, as "Bennett, Frank G., Jr.".

---------------------------
Minor interface adjustments
---------------------------

- Change the "comma_suffix" key used to indicate that a name suffix
  should be preceded by a comma to "comma-suffix", for consistency.


-------
Cleanup
-------

- Fix manual to reflect minor interface adjustments made in 1.0.1 and 
  1.0.4 releases, and to mention the "hereinafter" section of the
  abbreviations object, previously overlooked.


========================
Changes in version 1.0.3
========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Use comma + space for delimiter before implicit et al. term, when
  preceded by more than one personal name.  Brings processor behav ior
  into line with current Zotero processor and common style
  requirements.  Context sensitivity is not available with explicit et
  al. term; tha t issue to be addressed in CSL 1.1.


========================
Changes in version 1.0.2
========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Fix errors in the placement of non-dropping particles.

- Fix placement of particles in short-form names.

-------
Cleanup
-------

- Fix invalid CSL in test fixtures.


========================
Changes in version 1.0.1
========================

------------------------------------
Mishandled or unimplemented features
------------------------------------

- Return maxoffset and the value of second-field-align itself in the
  header of the return value from makeBibliography() when
  second-field-align is used.

- Correctly set the value of entry-spacing and line-spacing, providing
  for a default value of 1 for both attributes, and permitting them
  to be set to 0.

- Set position to subsequent rather than ibid on cites for which one
  or more notes stand between the current citation and the preceding
  partner.

- Implement and test the baseline value for vertical-align.

- Recognize first-reference-note-number as a variable attribute value
  on cs:if and cs:else-if.  Wake up locator attribute on cs:if and
  cs:else-if.

- Fix uppercasing of terms when rendered at first position, and
  prevent uppercasing otherwise.

- Use a space rather than space + comma as the delimiter preceding
  an implicit et-al term.

- Return entry_ids in the header returned by makeBibliography().  The
  entry_ids value is a list, in turn containing one list per entry
  (the nested list being necessary to provide for parallel citations
  picked up in the bibliography).

- Support for uncited items, via new updateUncitedItems() command.

-----------
Fine tuning
-----------

- Suppress issued year if it matches the volume number exactly.  This
  effect is needed for UK case cites.  It's an exception, so other
  content must take priority; the change comes out if it causes
  problems elsewhere.

- Fixes in node_names.js to make institutional names handling available in note styles.

- In what I think is a harmless divergence from the specification,
  return true for is-numeric for non-numeric variables that end in a
  number.  Some styles require adjustment of joins, such as the
  insertion of a comma, in this case.

- Taint items for a change in sequence number only if citation-number
  is used in the citation.

---------------------------------
Fixes to parallels detection code
---------------------------------

- Fix array overrun bug in parallel detection code.

- When the trailing year is quashed in a cite in initial position
  within a set, quash it also in the final partner.  Needed to
  handle public domain citations.

- Provide looser constraint on minimum variable content for parallels
  detection.  Provide for adding a constraint on item type.

- Eliminate am_master flag, and instead rely on the position of the
  rendered item under analysis within the cite set.  This works after
  eliminating and extraneous cite set list push operation that was
  causing it to fail.

-----------------
Internal bugfixes
-----------------

- Suppress registration of names that do not include a family name.

- Provide for the possibility that subsequent citation forms will not
  include any names, and therefore not produce disambiguation data in
  the registry.

- Avoid rendering of citation numbers when evaluating subsequent cites
  for disambiguation purposes, in node_text.js

- Fix a subtle bug in the rollback of added names, in
  disambig_cites.js.

- Companion changes in node_names.js and cmd_cite.js, to restore
  parameters based on subsequent-form disambiguation to the registry,
  after rendering a first-position cite.

- Fix bug caused by incomplete cs:choose node set as a helper for
  cs:substitute.

- Rename citationIdByItemId to citationsByItemId, and adjust code to
  set this list with pointers instead of IDs.  Leverage availability
  of citation pointers to get near-note conditional working.

---------------------------
Minor interface adjustments
---------------------------

- Extend abbreviations structure with addition sections
  "title", "publisher", and "publisher-place".  Change names of
  abbreviation sections "journal" and "series" to "container-title"
  and "collection-title" respectively, for consistency and clarity.


-------
Cleanup
-------

- Delete tests which, if they had been correctly written, would have
  been invalid CSL.

- Fix tests involving et-al-subsequent-min and
  et-al-subsequent-use-first that were either incorrectly written or
  required a wrong result.

- Align abbreviation list keys with field names in tests.

- Cleanup and reorganization of code related to multi-lingual handling
  and abbreviations.

- Adjust near-note tests to use a simple boolean value on the cite
  supplement element of the item, rather than a note distance.

- Adjust tests to reflect correct lowercasing of ibid term when not at
  first position.

- Change tests to use a space rather than comma+space before et al.
